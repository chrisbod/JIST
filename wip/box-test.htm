<!doctype html>
<html>
	<head>
		<title>Box/Text sizing test</title>
		<script>
		function QuickBox(width,height) {
			this.width = width || -1;
			this.height = height || -1;
		}
		QuickBox.prototype = {
			width: -1,
			height: -1,
			equals: function (box){
				//be forgiving!
				if (this.width<0 || this.height <0 || box.width < 0 || box.height < 0) {
					throw new Error("Invalid/unitialized box used in equals comparison")
				}
				return Math.round(this.width)==Math.round(box.width) && Math.round(this.height) == Math.round(box.height);
			},
			toString: function () {
				return Math.round(this.width)+" "+Math.round(this.height);
			}
		}
		function BoxModelInspector(element) {
			this.element = element;
		}
		BoxModelInspector.prototype = {
			element: null,
			getMarginBox: function () {
				return new QuickBox();
			},
			getBorderBox: function () {
				return new QuickBox();
			},
			getPaddingBox: function () {
				return new QuickBox();
			},
			getContentBox: function () {
				return new QuickBox();
			},
			getScrollBox: function () {
				return new QuickBox();
			},
			getOffsetBox: function () {
				return new QuickBox();
			}
		}
		var x = new BoxModelInspector(),
			y = new BoxModelInspector(),
			equals,
			ok = false;
			try {
				equals = x.getPaddingBox().equals(y.getPaddingBox())
			} catch (e) {
				ok = true;
			}
			if (!ok) {
				alert("test failed")
				throw new Error("test failed")
			}
		
		
		</script>
	</head>
	
	<body>
	
	
	
	</body>


</html>



